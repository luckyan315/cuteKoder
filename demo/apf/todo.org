***  tag
     1. JSON.parse --> try catch
     2.
       
* TODO Functions to impl
   2. User datebase management
   3. file/dir watcher (vfs) 
   4. jsDAV funcs 
     - search file 
     - replace file content 
     - regexp support 
   5. Impl simple virtual terminal
   6. pty permission (ssh login by terminal)


* TODO Advice by client
  1. webdav url may not need user id(nickname)
  2. packaged apf_c9.js does not work in our env
     
  
* TODO Test
  1. pv test for cloud_ide
  2. multi-client synchronization write/read
  3. emit multi-req from client side.

* TODO To be continue... things
  1. clone pty.js to ~/code/github/pty
  2. modify binding.gyp
     - include_dirs --> /usr/local/include/node
     - node-gyp configure
     - node-gyp build
     - node-v0.6.16 ./test.js  (see the result success!), but not in cur node(v0.10.13)
  3. 


* DONE Functions implemented
  1. socket.io plugin system for server side
  2. import pty.js
  3. filter all request from client side.
     - http : app.router (permission OK)
     - webdav : davServer.exec (permission OK)
     - websocket : socket.io (permission OK)

  4. express http request hook the url --> jsdav server

  5. file/workspace api change to using vfs api 

  6. use ejs render client side dynamicly

