{ nsp: 
   { name: '/private',
     server: 
      { nsps: [Object],
        _path: '/socket.io',
        _serveClient: true,
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Object],
        eio: [Object],
        engine: [Object] },
     sockets: [ [Circular] ],
     connected: { iR4W95XENhvndkVVAAAA: [Circular] },
     fns: [],
     ids: 0,
     acks: {},
     adapter: { nsp: [Circular], rooms: [Object], sids: [Object], encoder: {} },
     _events: { connection: [Function] } },
  server: 
   { nsps: { '/': [Object], '/private': [Object] },
     _path: '/socket.io',
     _serveClient: true,
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets: 
      { name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Object],
        ids: 0,
        acks: {},
        adapter: [Object],
        _events: [Object] },
     eio: 
      { clients: [Object],
        clientsCount: 1,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Object],
        allowUpgrades: true,
        allowRequest: [Function],
        cookie: 'io',
        ws: [Object],
        _events: [Object] },
     engine: 
      { clients: [Object],
        clientsCount: 1,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Object],
        allowUpgrades: true,
        allowRequest: [Function],
        cookie: 'io',
        ws: [Object],
        _events: [Object] } },
  adapter: 
   { nsp: 
      { name: '/private',
        server: [Object],
        sockets: [Object],
        connected: [Object],
        fns: [],
        ids: 0,
        acks: {},
        adapter: [Circular],
        _events: [Object] },
     rooms: { iR4W95XENhvndkVVAAAA: [Object] },
     sids: { iR4W95XENhvndkVVAAAA: [Object] },
     encoder: {} },
  id: 'iR4W95XENhvndkVVAAAA',
  client: 
   { server: 
      { nsps: [Object],
        _path: '/socket.io',
        _serveClient: true,
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Object],
        eio: [Object],
        engine: [Object] },
     conn: 
      { id: 'iR4W95XENhvndkVVAAAA',
        server: [Object],
        upgraded: false,
        readyState: 'open',
        writeBuffer: [Object],
        packetsFn: [Object],
        sentCallbackFn: [],
        request: [Object],
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer: [Object],
        transport: [Object],
        _events: [Object] },
     encoder: {},
     decoder: { reconstructor: null, _callbacks: [Object] },
     id: 'iR4W95XENhvndkVVAAAA',
     request: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: {},
        _maxListeners: 10,
        socket: [Object],
        connection: [Object],
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        trailers: {},
        _pendings: [],
        _pendingIndex: 0,
        url: '/socket.io/?EIO=3&transport=polling&t=1399187317079-0&b64=1',
        method: 'GET',
        statusCode: null,
        client: [Object],
        _consuming: true,
        _dumped: true,
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        upgrade: false,
        _query: [Object],
        res: [Object],
        cleanup: [Function: cleanup],
        read: [Function] },
     onclose: [Function],
     ondata: [Function],
     ondecoded: [Function],
     sockets: [ [Object], [Circular] ],
     nsps: { '/': [Object], '/private': [Circular] } },
  conn: 
   { id: 'iR4W95XENhvndkVVAAAA',
     server: 
      { clients: [Object],
        clientsCount: 1,
        pingTimeout: 60000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Object],
        allowUpgrades: true,
        allowRequest: [Function],
        cookie: 'io',
        ws: [Object],
        _events: [Object] },
     upgraded: false,
     readyState: 'open',
     writeBuffer: [ [Object], [Object] ],
     packetsFn: [ undefined, undefined ],
     sentCallbackFn: [],
     request: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: {},
        _maxListeners: 10,
        socket: [Object],
        connection: [Object],
        httpVersion: '1.1',
        complete: false,
        headers: [Object],
        trailers: {},
        _pendings: [],
        _pendingIndex: 0,
        url: '/socket.io/?EIO=3&transport=polling&t=1399187317079-0&b64=1',
        method: 'GET',
        statusCode: null,
        client: [Object],
        _consuming: true,
        _dumped: true,
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        upgrade: false,
        _query: [Object],
        res: [Object],
        cleanup: [Function: cleanup],
        read: [Function] },
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer: 
      { _idleTimeout: 85000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 1399187317119,
        _onTimeout: [Function],
        _repeat: false },
     transport: 
      { readyState: 'opening',
        maxHttpBufferSize: 100000000,
        supportsBinary: false,
        _events: [Object],
        sid: 'iR4W95XENhvndkVVAAAA',
        req: null,
        res: null,
        writable: false,
        dataReq: null,
        dataRes: null },
     _events: { close: [Object], data: [Function] } },
  rooms: [],
  acks: {},
  connected: true,
  disconnected: false }